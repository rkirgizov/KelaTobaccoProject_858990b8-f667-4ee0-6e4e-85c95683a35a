<ls:UIWidget x:Name="Combine"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:ls="clr-namespace:ls;assembly=Code"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d"
             d:DesignHeight="2160" d:DesignWidth="3840"
             ls:UIWidget.UseCustomDC="True"
             ls:UIWidget.ContextName="Combine">

    <ls:UIWidget.Resources>
        <DataTemplate x:Key="SlotTemplate">
            <Grid x:Name="Container" Tag="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}}}">
                <Grid.ToolTip>
                    <ls:LSTooltip Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"/>
                </Grid.ToolTip>

                <Image x:Name="Arrow" Source="{DynamicResource ArrowActive}" Stretch="None" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="70,160,0,0" Tag="{DynamicResource ArrowAlign}" IsHitTestVisible="False"/>

                <Grid x:Name="Slot" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,16,0,0">
                    <Image Source="pack://application:,,,/Core;component/Assets/Combine/slot_input.png" Stretch="None" IsHitTestVisible="False"/>
                    <Grid x:Name="Presenter" Background="Transparent" Tag="{Binding Path=Tag, ElementName=Container}" HorizontalAlignment="Center" VerticalAlignment="Center" Width="{StaticResource ContInvSlotSize}" Height="{StaticResource ContInvSlotSize}">
                        <ContentPresenter x:Name="Icon" Content="{Binding .}" Style="{StaticResource Style.GameObject}"  HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        <Control>
                            <Control.Template>
                                <ControlTemplate TargetType="Control">
                                    <Border BorderThickness="0" Background="Transparent"/>
                                </ControlTemplate>
                            </Control.Template>
                            <b:Interaction.Triggers>
                                <b:EventTrigger EventName="MouseEnter">
                                    <ls:LSPlaySound Sound="UI_Shared_Hover"/>
                                </b:EventTrigger>
                                <b:EventTrigger EventName="MouseLeftButtonUp">
                                    <b:InvokeCommandAction Command="{Binding DataContext.CustomEvent ,RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="ToggleCharacterPanel"/>
                                </b:EventTrigger>
                                <b:EventTrigger EventName="MouseRightButtonUp">
                                    <b:InvokeCommandAction Command="{Binding DataContext.ClearSlotCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding Path=Tag, ElementName=Container}"/>
                                    <ls:LSPlaySound Sound="UI_HUD_Combine_ClearSlot"/>
                                </b:EventTrigger>
                            </b:Interaction.Triggers>
                        </Control>
                        <Border BorderThickness="2" x:Name="SlotBorder" BorderBrush="{StaticResource LS_accent100TxtColor}" Width="{StaticResource ContInvSlotSize}" Height="{StaticResource ContInvSlotSize}" Visibility="{Binding IsMouseOver, ElementName=Container, Converter={StaticResource BoolToVisibleConverter}}"/>
                        <b:Interaction.Behaviors>
                            <ls:DragGenericBehavior x:Name="DragBehavior" StartDragCommand="{Binding DataContext.StartDragCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" AllowDrag="{Binding DataContext, ElementName=Slot, Converter={StaticResource NullToBoolFalseConverter}}"/>
                            <ls:DropOnGenericBehavior DropCommand="{Binding DataContext.DropSlotCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"/>
                        </b:Interaction.Behaviors>
                    </Grid>
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="PreviewDrop">
                            <ls:LSPlaySound Sound="UI_HUD_Combine_Drop"/>
                        </b:EventTrigger>
                    </b:Interaction.Triggers>
                </Grid>

                <Image x:Name="Light" Source="pack://application:,,,/Core;component/Assets/Combine/combineAddition_active.png" Stretch="None" Margin="62,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
            </Grid>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Path=Tag, ElementName=Container, Converter={StaticResource NullToBoolTrueConverter}}" Value="True">
                    <Setter TargetName="Light" Property="Source" Value="pack://application:,,,/Core;component/Assets/Combine/combineOrigin_active.png"/>
                    <Setter TargetName="Presenter" Property="IsEnabled" Value="False"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding DataContext, RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                    <Setter TargetName="Arrow" Property="Source" Value="{DynamicResource ArrowInactive}"/>
                    <Setter TargetName="Container" Property="ToolTipService.IsEnabled" Value="False"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Tag, ElementName=Arrow}" Value="Center">
                    <Setter TargetName="Arrow" Property="HorizontalAlignment" Value="Center"/>
                    <Setter TargetName="Arrow" Property="Margin" Value="0,160,0,0"/>
                    <Setter TargetName="Slot" Property="HorizontalAlignment" Value="Center"/>
                    <Setter TargetName="Light" Property="HorizontalAlignment" Value="Center"/>
                    <Setter TargetName="Light" Property="Margin" Value="0"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Tag, ElementName=Arrow}" Value="Right">
                    <Setter TargetName="Arrow" Property="HorizontalAlignment" Value="Right"/>
                    <Setter TargetName="Arrow" Property="Margin" Value="0,160,70,0"/>
                    <Setter TargetName="Arrow" Property="RenderTransformOrigin" Value="0.5, 0.5"/>
                    <Setter TargetName="Arrow" Property="RenderTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleX="-1"/>
                        </Setter.Value>
                    </Setter>
                    <Setter TargetName="Slot" Property="HorizontalAlignment" Value="Right"/>
                    <Setter TargetName="Light" Property="HorizontalAlignment" Value="Right"/>
                    <Setter TargetName="Light" Property="Margin" Value="0,0,62,0"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding DataContext.CurrentState, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="Working">
                    <Setter TargetName="Presenter" Property="IsEnabled" Value="False"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding DataContext.CurrentState, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="Success">
                    <!-- KELA -->
                    <Setter TargetName="Arrow" Property="Source" Value="{DynamicResource ArrowActive}"/>
                    <Setter TargetName="Container" Property="IsEnabled" Value="True"/>
                    <Setter TargetName="Presenter" Property="IsEnabled" Value="True"/>
                    <Setter TargetName="Presenter" Property="Opacity" Value="1.75"/>
                    <Setter TargetName="Light" Property="Source" Value="pack://application:,,,/Core;component/Assets/Combine/combineOrigin_active.png"/>
                    <!-- KELA -->
                    <!-- <Setter TargetName="Arrow" Property="Source" Value="{DynamicResource ArrowActive}"/> -->
                    <!-- <Setter TargetName="Container" Property="IsEnabled" Value="False"/>
                    <Setter TargetName="Presenter" Property="IsEnabled" Value="False"/>
                    <Setter TargetName="Presenter" Property="Opacity" Value="0.75"/>
                    <Setter TargetName="Light" Property="Source" Value="pack://application:,,,/Core;component/Assets/Combine/combineOrigin_inactive.png"/>
                    <Setter TargetName="Arrow" Property="Source" Value="{DynamicResource ArrowInactive}"/> -->
                </DataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=Tag, ElementName=Container, Converter={StaticResource NullToBoolTrueConverter}}" Value="False"/>
                        <Condition Binding="{Binding DataContext.CurrentState, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="Success"/>
                    </MultiDataTrigger.Conditions>
                    <!-- KELA -->
                    <Setter TargetName="Light" Property="Source" Value="pack://application:,,,/Core;component/Assets/Combine/combineAddition_active.png"/>
                    <!-- KELA -->
                    <!-- <Setter TargetName="Light" Property="Source" Value="pack://application:,,,/Core;component/Assets/Combine/combineAddition_inactive.png"/> -->
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=Tag, ElementName=Container, Converter={StaticResource NullToBoolTrueConverter}}" Value="False"/>
                        <Condition Binding="{Binding DataContext.FailReason, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="Invalid"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="Arrow" Property="Source" Value="{DynamicResource ArrowAlert}"/>
                    <Setter TargetName="Light" Property="Source" Value="pack://application:,,,/Core;component/Assets/Combine/combineAddition_alert.png"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=Tag, ElementName=Container, Converter={StaticResource NullToBoolTrueConverter}}" Value="False"/>
                        <Condition Binding="{Binding DataContext.FailReason, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="IngredientNotFound"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="Arrow" Property="Source" Value="{DynamicResource ArrowAlert}"/>
                    <Setter TargetName="Light" Property="Source" Value="pack://application:,,,/Core;component/Assets/Combine/combineAddition_alert.png"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=Tag, ElementName=Container, Converter={StaticResource NullToBoolTrueConverter}}" Value="True"/>
                        <Condition Binding="{Binding DataContext.FailReason, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="BaseNotFound"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="Arrow" Property="Source" Value="{DynamicResource ArrowAlert}"/>
                    <Setter TargetName="Light" Property="Source" Value="pack://application:,,,/Core;component/Assets/Combine/combineOrigin_inactive.png"/>
                </MultiDataTrigger>

            </DataTemplate.Triggers>
        </DataTemplate>
    </ls:UIWidget.Resources>
    <ls:UIWidget.ContentTemplate>
        <DataTemplate>
            <Grid x:Name="RootCanvas" ls:TooltipExtender.Owner="{Binding CurrentPlayer.SelectedCharacter}">
                <Grid x:Name="DragableWidget" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="980,0,0,0">
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="Loaded">
                            <ls:LSPlaySound Sound="UI_HUD_Combine_Open"/>
                        </b:EventTrigger>
                        <b:DataTrigger Binding="{Binding CurrentState}" Value="Success">
                            <ls:LSPlaySound Sound="UI_HUD_Combine_Success"/>
                        </b:DataTrigger>
                        <b:DataTrigger Binding="{Binding CurrentState}" Value="Fail">
                            <b:Interaction.Behaviors>
                                <b:ConditionBehavior>
                                    <b:ConditionalExpression>
                                        <b:ComparisonCondition LeftOperand="{Binding FailReason}" Operator="Equal" RightOperand="Invalid"/>
                                    </b:ConditionalExpression>
                                </b:ConditionBehavior>
                            </b:Interaction.Behaviors>
                            <ls:LSPlaySound Sound="UI_HUD_Combine_Failure"/>
                        </b:DataTrigger>
                        <b:DataTrigger Binding="{Binding CurrentState}" Value="Fail">
                            <b:Interaction.Behaviors>
                                <b:ConditionBehavior>
                                    <b:ConditionalExpression>
                                        <b:ComparisonCondition LeftOperand="{Binding FailReason}" Operator="NotEqual" RightOperand="Invalid"/>
                                    </b:ConditionalExpression>
                                </b:ConditionBehavior>
                            </b:Interaction.Behaviors>
                            <ls:LSPlaySound Sound="UI_HUD_Combine_Error"/>
                        </b:DataTrigger>
                    </b:Interaction.Triggers>

                    <b:Interaction.Behaviors>
                        <ls:LSMouseDragElementBehavior HitArea="{Binding ElementName=DragHit,Mode=OneWay}"/>
                    </b:Interaction.Behaviors>

                    <ls:LSNineSliceImage Width="1164" ImageSource="pack://application:,,,/Core;component/Assets/Combine/combine_bg.png" Slices="0,350,0,190" HorizontalAlignment="Center" VerticalAlignment="Center" >
                        <Grid>
                            <Rectangle x:Name="DragHit" Fill="Transparent" IsHitTestVisible="True" Margin="78,66,78,152"/>
                            <Control HorizontalAlignment="Center">
                                <Control.Template>
                                    <ControlTemplate>
                                        <Grid x:Name="Container" HorizontalAlignment="Center" Margin="0,220,0,230">
                                            <!-- Result -->
                                            <Grid VerticalAlignment="Bottom" HorizontalAlignment="Center" Background="Transparent">
                                                <Image Source="pack://application:,,,/Core;component/Assets/Combine/slot_output.png" Stretch="None" IsHitTestVisible="False"/>
                                                <Image x:Name="OutputFill"  Source="pack://application:,,,/Core;component/Assets/Combine/slot_output_fill.png" Stretch="None" Visibility="{Binding PreviewIcon, Converter=   {StaticResource BoolToHiddenConverter}}"/>
                                                <ls:LSEntityObject x:Name="Result" Width="{StaticResource ContInvSlotSize}" Height="{StaticResource ContInvSlotSize}" EntityRef="{Binding ResultItem.EntityHandle}" Context="Combine" Visibility="{Binding ResultItem.Icon,   Converter={StaticResource NullToHiddenConverter}}">
                                                    <ls:LSEntityObject.ToolTip>
                                                        <ls:LSTooltip Content="{Binding DataContext.ResultItem, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                    </ls:LSEntityObject.ToolTip>
                                                    <ContentPresenter Content="{Binding ResultItem}" Style="{StaticResource Style.GameObject}"/>
                                                </ls:LSEntityObject>
                                                <Rectangle Fill="{Binding PreviewIcon}" Width="{StaticResource ContInvSlotSize}" Height="{StaticResource ContInvSlotSize}" Visibility="{Binding Visibility, Converter={StaticResource InvertVisibilityConverter}, ElementName=Result}" IsHitTestVisible="True">
                                                    <Rectangle.ToolTip>
                                                        <ls:LSTooltip Content="{Binding DataContext.ResultItemPreview, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                    </Rectangle.ToolTip>
                                                </Rectangle>
                                                <Image x:Name="FailCross" Source="pack://application:,,,/Core;component/Assets/Combine/combine_alertOverlay.png" Stretch="None" Visibility="Hidden" IsHitTestVisible="False"/>
                                            </Grid>

                                            <!-- Slots, ordered L2 L1 M R1 R2 -->
                                            <ContentPresenter x:Name="SlotL2" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,501,56" Content="{Binding BaseItem}" ContentTemplate="{StaticResource         SlotTemplate}" Visibility="Collapsed">
                                                <ContentPresenter.Resources>
                                                    <ImageSource x:Key="ArrowActive">pack://application:,,,/Core;component/Assets/Combine/combineArrow_type3_active.png</ImageSource>
                                                    <ImageSource x:Key="ArrowInactive">pack://application:,,,/Core;component/Assets/Combine/combineArrow_type3_inactive.png</ImageSource>
                                                    <ImageSource x:Key="ArrowAlert">pack://application:,,,/Core;component/Assets/Combine/combineArrow_type3_alert.png</ImageSource>
                                                </ContentPresenter.Resources>
                                            </ContentPresenter>

                                            <ContentPresenter x:Name="SlotL1" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,322,80" Content="{Binding BaseItem}" ContentTemplate="{StaticResource         SlotTemplate}">
                                                <ContentPresenter.Resources>
                                                    <ImageSource x:Key="ArrowActive">pack://application:,,,/Core;component/Assets/Combine/combineArrow_type1_active.png</ImageSource>
                                                    <ImageSource x:Key="ArrowInactive">pack://application:,,,/Core;component/Assets/Combine/combineArrow_type1_inactive.png</ImageSource>
                                                    <ImageSource x:Key="ArrowAlert">pack://application:,,,/Core;component/Assets/Combine/combineArrow_type1_alert.png</ImageSource>
                                                </ContentPresenter.Resources>
                                            </ContentPresenter>

                                            <ContentPresenter x:Name="SlotM" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,156" Content="{Binding BaseItem}" ContentTemplate="{StaticResource       SlotTemplate}" Visibility="Collapsed">
                                                <ContentPresenter.Resources>
                                                    <ImageSource x:Key="ArrowActive">pack://application:,,,/Core;component/Assets/Combine/combineArrow_type2_active.png</ImageSource>
                                                    <ImageSource x:Key="ArrowInactive">pack://application:,,,/Core;component/Assets/Combine/combineArrow_type2_inactive.png</ImageSource>
                                                    <ImageSource x:Key="ArrowAlert">pack://application:,,,/Core;component/Assets/Combine/combineArrow_type2_alert.png</ImageSource>
                                                    <System:String x:Key="ArrowAlign">Center</System:String>
                                                </ContentPresenter.Resources>
                                            </ContentPresenter>

                                            <ContentPresenter x:Name="SlotR1" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="322,0,0,80" Content="{Binding Ingredients[0]}" ContentTemplate="{StaticResource       SlotTemplate}">
                                                <ContentPresenter.Tag>
                                                    <System:Int32>0</System:Int32>
                                                </ContentPresenter.Tag>
                                                <ContentPresenter.Resources>
                                                    <ImageSource x:Key="ArrowActive">pack://application:,,,/Core;component/Assets/Combine/combineArrow_type1_active.png</ImageSource>
                                                    <ImageSource x:Key="ArrowInactive">pack://application:,,,/Core;component/Assets/Combine/combineArrow_type1_inactive.png</ImageSource>
                                                    <ImageSource x:Key="ArrowAlert">pack://application:,,,/Core;component/Assets/Combine/combineArrow_type1_alert.png</ImageSource>
                                                    <System:String x:Key="ArrowAlign">Right</System:String>
                                                </ContentPresenter.Resources>
                                            </ContentPresenter>

                                            <ContentPresenter x:Name="SlotR2" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="501,0,0,56" Content="{Binding Ingredients[2]}" ContentTemplate="{StaticResource       SlotTemplate}" Visibility="Collapsed">
                                                <ContentPresenter.Tag>
                                                    <System:Int32>2</System:Int32>
                                                </ContentPresenter.Tag>
                                                <ContentPresenter.Resources>
                                                    <ImageSource x:Key="ArrowActive">pack://application:,,,/Core;component/Assets/Combine/combineArrow_type3_active.png</ImageSource>
                                                    <ImageSource x:Key="ArrowInactive">pack://application:,,,/Core;component/Assets/Combine/combineArrow_type3_inactive.png</ImageSource>
                                                    <ImageSource x:Key="ArrowAlert">pack://application:,,,/Core;component/Assets/Combine/combineArrow_type3_alert.png</ImageSource>
                                                    <System:String x:Key="ArrowAlign">Right</System:String>
                                                </ContentPresenter.Resources>
                                            </ContentPresenter>

                                            <!-- Progress icon -->
                                            <Grid x:Name="ProgressContainer" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="0,0,0,228">
                                                <Image Source="pack://application:,,,/Core;component/Assets/Combine/timerCircleBG.png" Stretch="None"/>
                                                <ls:LSPie x:Name="Progressbar" Value="{Binding BarProgress}" SweepDirection="Counterclockwise" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                                                    <Image Source="/Core;component/Assets/Combine/timerCircle.png" Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                                </ls:LSPie>
                                                <Image Source="pack://application:,,,/Core;component/Assets/Combine/ico_combine.png" Stretch="None"/>
                                            </Grid>
                                        </Grid>

                                        <ControlTemplate.Triggers>
                                            <DataTrigger Binding="{Binding FailReason}" Value="Invalid">
                                                <Setter TargetName="FailCross" Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding CurrentState}" Value="Ready"/>
                                                    <Condition Binding="{Binding BaseItem.AlchemyCombinationType}" Value="IngredientsToExtract"/>
                                                    <Condition Binding="{Binding PreviewIcon}" Value="{x:Null}"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter TargetName="FailCross" Property="Visibility" Value="Visible"/>
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding CurrentState}" Value="Ready"/>
                                                    <Condition Binding="{Binding BaseItem.AlchemyCombinationType}" Value="ExtractToSolution"/>
                                                    <Condition Binding="{Binding PreviewIcon}" Value="{x:Null}"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter TargetName="FailCross" Property="Visibility" Value="Visible"/>
                                            </MultiDataTrigger>
                                            <DataTrigger Binding="{Binding DataContext.CurrentState, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="Success">
                                                <Setter TargetName="OutputFill" Property="Visibility" Value="Hidden"/>
                                            </DataTrigger>
                                            <!-- Margins, content, and tags are assigned depending on the number of ingredients required -->
                                            <!-- 1 ingredient -->
                                            <DataTrigger Binding="{Binding Ingredients.Count}" Value="1">
                                                <Setter TargetName="SlotL1" Property="Margin" Value="0,0,322,66"/>
                                                <Setter TargetName="SlotR1" Property="Margin" Value="322,0,0,66"/>
                                                <Setter TargetName="ProgressContainer" Property="Margin" Value="0,0,0,214"/>
                                            </DataTrigger>
                                            <!-- 2 ingredients -->
                                            <DataTrigger Binding="{Binding Ingredients.Count}" Value="2">
                                                <Setter TargetName="Container" Property="Margin" Value="0,180,0,230"/>
                                                <Setter TargetName="SlotL1" Property="Content" Value="{Binding Ingredients[0]}"/>
                                                <Setter TargetName="SlotL1" Property="Tag">
                                                    <Setter.Value>
                                                        <System:Int32>0</System:Int32>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter TargetName="SlotM" Property="Visibility" Value="Visible"/>
                                                <Setter TargetName="SlotR1" Property="Content" Value="{Binding Ingredients[1]}"/>
                                                <Setter TargetName="SlotR1" Property="Tag">
                                                    <Setter.Value>
                                                        <System:Int32>1</System:Int32>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                            <!-- 3 ingredients -->
                                            <DataTrigger Binding="{Binding Ingredients.Count}" Value="3">
                                                <Setter TargetName="SlotL2" Property="Visibility" Value="Visible"/>
                                                <Setter TargetName="SlotL1" Property="Content" Value="{Binding Ingredients[0]}"/>
                                                <Setter TargetName="SlotL1" Property="Tag">
                                                    <Setter.Value>
                                                        <System:Int32>0</System:Int32>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter TargetName="SlotR1" Property="Content" Value="{Binding Ingredients[1]}"/>
                                                <Setter TargetName="SlotR1" Property="Tag">
                                                    <Setter.Value>
                                                        <System:Int32>1</System:Int32>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter TargetName="SlotR2" Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                            <!-- 4 ingredients -->
                                            <DataTrigger Binding="{Binding Ingredients.Count}" Value="4">
                                                <Setter TargetName="Container" Property="Margin" Value="0,180,0,230"/>
                                                <Setter TargetName="SlotL2" Property="Visibility" Value="Visible"/>
                                                <Setter TargetName="SlotL2" Property="Content" Value="{Binding Ingredients[0]}"/>
                                                <Setter TargetName="SlotL2" Property="Tag">
                                                    <Setter.Value>
                                                        <System:Int32>0</System:Int32>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter TargetName="SlotL1" Property="Content" Value="{Binding Ingredients[1]}"/>
                                                <Setter TargetName="SlotL1" Property="Tag">
                                                    <Setter.Value>
                                                        <System:Int32>1</System:Int32>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter TargetName="SlotM" Property="Visibility" Value="Visible"/>
                                                <Setter TargetName="SlotR1" Property="Content" Value="{Binding Ingredients[2]}"/>
                                                <Setter TargetName="SlotR1" Property="Tag">
                                                    <Setter.Value>
                                                        <System:Int32>2</System:Int32>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter TargetName="SlotR2" Property="Visibility" Value="Visible"/>
                                                <Setter TargetName="SlotR2" Property="Content" Value="{Binding Ingredients[3]}"/>
                                                <Setter TargetName="SlotR2" Property="Tag">
                                                    <Setter.Value>
                                                        <System:Int32>3</System:Int32>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Control.Template>
                            </Control>

                            <ls:LSButton x:Name="CloseButton" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,82,92,0" SoundID="UI_HUD_Combine_Close" Command="{Binding CustomEvent}" CommandParameter="CloseWidget">
                                <ls:LSButton.Style>
                                    <Style TargetType="ls:LSButton" BasedOn="{StaticResource PopUpCloseButton}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding CurrentState}" Value="Working">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ls:LSButton.Style>
                            </ls:LSButton>

                            <TextBlock VerticalAlignment="Top" HorizontalAlignment="Center" Width="800" Margin="0,90,0,0" TextAlignment="Center" FontSize="{StaticResource DefaultFontSize}" TextWrapping="Wrap" IsHitTestVisible="False" >
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Text" Value="{Binding Source='h02ae15ceg643fg41cagadc2g6a4d624daaa2', Converter={StaticResource TranslatedStringConverter}}"/>
                                        <Setter Property="Foreground" Value="{StaticResource LS_accent100TxtColor}"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding CurrentState}" Value="Success">
                                                <Setter Property="Text" Value="{Binding ResultItem.Name}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding CurrentState}" Value="Fail">
                                                <Setter Property="Foreground" Value="{StaticResource LS_alertTxtColor}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding FailReason}" Value="Invalid">
                                                <Setter Property="Text" Value="{Binding Source='h47f58fa7g6e37g42fag8408gd89ae7856b9d', Converter={StaticResource TranslatedStringConverter}}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding FailReason}" Value="TooFar">
                                                <Setter Property="Text" Value="{Binding Source='h1371c0f2g99ccg47a3g8012g9c240aec2b50', Converter={StaticResource TranslatedStringConverter}}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding FailReason}" Value="NotAllFilled">
                                                <Setter Property="Text" Value="{Binding Source='h2a223e63g1953g4a41gb631gfe287b044889', Converter={StaticResource TranslatedStringConverter}}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding FailReason}" Value="Duplicate">
                                                <Setter Property="Text" Value="{Binding Source='h85a8d808g354ag4709g8dbfg39437b3403e7', Converter={StaticResource TranslatedStringConverter}}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding FailReason}" Value="BaseNotFound">
                                                <Setter Property="Text" Value="{Binding Source='h84799792gde2eg4c66g8a6bgc6ae05feaa02', Converter={StaticResource TranslatedStringConverter}}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding FailReason}" Value="IngredientNotFound">
                                                <Setter Property="Text" Value="{Binding Source='h90ce0538g95a1g4d73gb5c5g54a4dae1c4e9', Converter={StaticResource TranslatedStringConverter}}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding FailReason}" Value="Interrupted">
                                                <Setter Property="Text" Value="{Binding Source='he3d62e55g4ed3g49fagb679ge4d9ef4a50b8', Converter={StaticResource TranslatedStringConverter}}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding FailReason}" Value="NotEmptySlot">
                                                <Setter Property="Text" Value="{Binding Source='he1c084aag96c0g4716gb47cge9f7e6e5b69d', Converter={StaticResource TranslatedStringConverter}}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding FailReason}" Value="IngredientAlreadyAdded">
                                                <Setter Property="Text" Value="{Binding Source='h5a6c11e8gf30eg4543g8cb4ge288199d523d', Converter={StaticResource TranslatedStringConverter}}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>

                            <!-- Bottom combine button -->
                            <!-- CommandParameter is the action duration -->
                            <ls:LSButton x:Name="CombineButton" Style="{StaticResource BrownButtonStyle}" VerticalAlignment="Bottom" HorizontalAlignment="Center" Content="{Binding Source='h040b1f64g325eg4b46gb957gc2347cf3fb0d', Converter={StaticResource TranslatedStringConverter}}" Command="{Binding StartActionCommand}" CommandParameter="0.6" BoundEvent="UICombine" SoundID="UI_HUD_Combine" Margin="0,0,0,112" IsEnabled="False">
                            </ls:LSButton>
                        </Grid>
                    </ls:LSNineSliceImage>
                </Grid>

                <!-- Block other actions during combine action -->
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Currentstate}" Value="Working">
                                <Setter Property="Background" Value="Transparent"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
            </Grid>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding CurrentState}" Value="Ready">
                    <Setter TargetName="CombineButton" Property="IsEnabled" Value="True"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding FailReason}" Value="Interrupted">
                    <Setter TargetName="CombineButton" Property="IsEnabled" Value="True"/>
                </DataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding BaseItem.AlchemyCombinationType}" Value="IngredientsToExtract"/>
                        <Condition Binding="{Binding CurrentState}" Value="Ready"/>
                        <Condition Binding="{Binding PreviewIcon}" Value="{x:Null}"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter TargetName="CombineButton" Property="IsEnabled" Value="False"/>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding BaseItem.AlchemyCombinationType}" Value="ExtractToSolution"/>
                        <Condition Binding="{Binding CurrentState}" Value="Ready"/>
                        <Condition Binding="{Binding PreviewIcon}" Value="{x:Null}"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter TargetName="CombineButton" Property="IsEnabled" Value="False"/>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <!-- KELA -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Ingredients.Count}" Value="1"/>
                        <Condition Binding="{Binding Ingredients[0].IsContainer}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter TargetName="CombineButton" Property="IsEnabled" Value="True"/>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Ingredients.Count}" Value="2"/>
                        <Condition Binding="{Binding Ingredients[0].IsContainer}" Value="True"/>
                        <Condition Binding="{Binding Ingredients[1].IsContainer}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter TargetName="CombineButton" Property="IsEnabled" Value="True"/>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Ingredients.Count}" Value="3"/>
                        <Condition Binding="{Binding Ingredients[0].IsContainer}" Value="True"/>
                        <Condition Binding="{Binding Ingredients[1].IsContainer}" Value="True"/>
                        <Condition Binding="{Binding Ingredients[2].IsContainer}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter TargetName="CombineButton" Property="IsEnabled" Value="True"/>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Ingredients.Count}" Value="4"/>
                        <Condition Binding="{Binding Ingredients[0].IsContainer}" Value="True"/>
                        <Condition Binding="{Binding Ingredients[1].IsContainer}" Value="True"/>
                        <Condition Binding="{Binding Ingredients[2].IsContainer}" Value="True"/>
                        <Condition Binding="{Binding Ingredients[3].IsContainer}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter TargetName="CombineButton" Property="IsEnabled" Value="True"/>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <!-- KELA -->
            </DataTemplate.Triggers>
        </DataTemplate>
    </ls:UIWidget.ContentTemplate>
</ls:UIWidget>